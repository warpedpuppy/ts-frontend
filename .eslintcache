[{"/Users/edwardwalther/Sites/tryingsomething/frontend/src/index.js":"1","/Users/edwardwalther/Sites/tryingsomething/frontend/src/reportWebVitals.js":"2","/Users/edwardwalther/Sites/tryingsomething/frontend/src/App.js":"3","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/Home.js":"4","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/NotFound.js":"5","/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/Menu.js":"6","/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/TokenService.js":"7","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hsl/HSL.js":"8","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/CSS.js":"9","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/rgb/RGB.js":"10","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/Hexadecimal.js":"11","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexCreator.js":"12","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexPicker.js":"13","/Users/edwardwalther/Sites/tryingsomething/frontend/src/AppContext.js":"14","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/DBS.js":"15","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/Layout.js":"16","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/Color.js":"17","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/grid/Grid.js":"18","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/flex/Flex.js":"19","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/GraphQL.js":"20","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/DisplayChars.js":"21","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/js/JS.js":"22","/Users/edwardwalther/Sites/tryingsomething/frontend/src/config.js":"23","/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/Utils.js":"24","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/services/mutations.js":"25","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/Mongo.js":"26","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/services/mongo-services.js":"27","/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/SubMenu.js":"28","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/CRUD.js":"29","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/JoinPopulate.js":"30","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CrudButtons.js":"31","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/postresql/PostgresQL.js":"32","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CharacterModule.js":"33"},{"size":546,"mtime":1611581296697,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1607089328663,"results":"36","hashOfConfig":"35"},{"size":1673,"mtime":1613063905933,"results":"37","hashOfConfig":"35"},{"size":404,"mtime":1612885264955,"results":"38","hashOfConfig":"35"},{"size":160,"mtime":1613063928501,"results":"39","hashOfConfig":"35"},{"size":1252,"mtime":1612812674024,"results":"40","hashOfConfig":"35"},{"size":200,"mtime":1611581184878,"results":"41","hashOfConfig":"35"},{"size":2995,"mtime":1612799740006,"results":"42","hashOfConfig":"35"},{"size":650,"mtime":1612884134537,"results":"43","hashOfConfig":"35"},{"size":2887,"mtime":1612801148819,"results":"44","hashOfConfig":"35"},{"size":3358,"mtime":1612799821332,"results":"45","hashOfConfig":"35"},{"size":1245,"mtime":1612453553008,"results":"46","hashOfConfig":"35"},{"size":1007,"mtime":1612450572943,"results":"47","hashOfConfig":"35"},{"size":140,"mtime":1612449516966,"results":"48","hashOfConfig":"35"},{"size":883,"mtime":1613669277888,"results":"49","hashOfConfig":"35"},{"size":993,"mtime":1612884646564,"results":"50","hashOfConfig":"35"},{"size":1146,"mtime":1612884492703,"results":"51","hashOfConfig":"35"},{"size":152,"mtime":1612884699638,"results":"52","hashOfConfig":"35"},{"size":152,"mtime":1612884704004,"results":"53","hashOfConfig":"35"},{"size":6685,"mtime":1613678680236,"results":"54","hashOfConfig":"35"},{"size":0,"mtime":1613668707580,"results":"55","hashOfConfig":"35"},{"size":867,"mtime":1613480542502,"results":"56","hashOfConfig":"35"},{"size":81,"mtime":1613570920492,"results":"57","hashOfConfig":"35"},{"size":534,"mtime":1613653372200,"results":"58","hashOfConfig":"35"},{"size":3179,"mtime":1613678613346,"results":"59","hashOfConfig":"35"},{"size":2986,"mtime":1613663978415,"results":"60","hashOfConfig":"35"},{"size":1690,"mtime":1613663083284,"results":"61","hashOfConfig":"35"},{"size":850,"mtime":1613677638161,"results":"62","hashOfConfig":"35"},{"size":1256,"mtime":1613668572554,"results":"63","hashOfConfig":"35"},{"size":1096,"mtime":1613568017843,"results":"64","hashOfConfig":"35"},{"size":504,"mtime":1613658277719,"results":"65","hashOfConfig":"35"},{"size":3028,"mtime":1613661927014,"results":"66","hashOfConfig":"35"},{"size":870,"mtime":1613678245084,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1vrafp1",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwardwalther/Sites/tryingsomething/frontend/src/index.js",[],["138","139"],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/reportWebVitals.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/App.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/Home.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/NotFound.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/Menu.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/TokenService.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hsl/HSL.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/CSS.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/rgb/RGB.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/Hexadecimal.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexCreator.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexPicker.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/AppContext.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/DBS.js",["140","141"],"import React, { Component } from 'react';\nimport '../../sitewide-css/page-layout-with-menu.css';\nimport Submenu from '../../components/SubMenu';\nimport CRUD from './CRUD';\nimport JoinPopulate from './JoinPopulate';\nimport Config from '../../config';\n\nimport Mutations from './graphql/services/mutations';\nexport default class DBS extends Component {\n  state = {\n    active: 'crud',\n    categories: ['crud', 'join/populate', 'performance']\n  }\n\n  onChange = (e) => {   \n   this.setState({active: e.target.innerHTML})\n  }\n  render() {\n    let active;\n    if (this.state.active === 'crud') {\n      active = <CRUD />\n    } else if (this.state.active === 'join/populate') {\n      active = <JoinPopulate />\n    }\n    return (\n      <>\n      <Submenu title={`dbs - ${this.state.active}`} menuItems={this.state.categories} onChange={this.onChange} />\n      { active }\n      </>\n    );\n  }\n}\n","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/Layout.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/Color.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/grid/Grid.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/flex/Flex.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/GraphQL.js",["142","143","144"],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/DisplayChars.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/js/JS.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/config.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/Utils.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/services/mutations.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/Mongo.js",["145"],"import React, { Component } from 'react';\nimport CrudButtons from '../components/CrudButtons';\nimport Config from '../../../config';\nimport Faker from 'faker';\nimport { v4 as uuidv4 } from 'uuid';\nimport Utils from '../../../services/Utils';\nexport default class Mongo extends Component {\n  state = {characters: [], activeCharacter: undefined}\n\n  componentDidMount = () => {\n    this.uuid = uuidv4();\n  }\n  componentWillUnmount = async () => {\n    let response = await fetch(`${Config.API_URL}/mongo-restful/delete-all`, {\n      method: \"DELETE\", \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({userid: this.uuid})\n    })\n    console.log('delete all response = ', response)\n  }\n  create = async (e) => {\n      e.preventDefault();\n      let obj = {\n          userid: this.uuid,\n          character_name: Faker.name.findName(),\n          character_color: Utils.randomHex()\n      }\n\n      let response = await fetch(`${Config.API_URL}/mongo-restful`, {\n          method: \"POST\", \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(obj)\n      })\n      let responseJson = await response.json();\n  }\n  read = async (e) => {\n    e.preventDefault();\n    let response = await fetch(`${Config.API_URL}/mongo-restful/${this.uuid}`)\n    let responseJson = await response.json();\n    console.log(responseJson)\n   this.setState({characters: responseJson, activeCharacter: responseJson[0]})\n  }\n  update = async (e) => {\n    e.preventDefault();\n    if (!this.state.activeCharacter) return;\n    let obj = {\n      id: this.state.activeCharacter.id,\n      character_color: Utils.randomHex(),\n      character_name: this.state.activeCharacter.character_name\n    }\n    let response = await fetch(`${Config.API_URL}/mongo-restful`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    })\n    let responseJson = await response.json();\n    console.log(obj.id, responseJson)\n  }\n  delete = async (e) => {\n    e.preventDefault();\n    if (!this.state.activeCharacter) return;\n    let obj = {\n      id: this.state.activeCharacter.id\n    }\n    let response = await fetch(`${Config.API_URL}/mongo-restful`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    })\n    let responseJson = await response.json();\n    console.log(obj.id, responseJson)\n  }\n  \n  render() {\n    return (\n      <>\n      <CrudButtons create={this.create} read={this.read} update={this.update} delete={this.delete} />\n      <ul>\n        {\n          this.state.characters.map ( (item, index) => {\n            return (<li key={index}>\n              <ul>\n                <li>{item.id}</li>\n                <li>{item.character_color}</li>\n                <li>{item.character_name}</li>\n              </ul>\n            </li>)\n          })\n        }\n      </ul>\n      </>\n    );\n  }\n}\n","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/services/mongo-services.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/SubMenu.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/CRUD.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/JoinPopulate.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CrudButtons.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/postresql/PostgresQL.js",["146"],"import React, { Component } from 'react';\nimport CrudButtons from '../components/CrudButtons';\nimport Config from '../../../config';\nimport Faker from 'faker';\nimport { v4 as uuidv4 } from 'uuid';\nimport Utils from '../../../services/Utils';\nexport default class PostgresQL extends Component {\n  state = {characters: [], activeCharacter: undefined}\n\n  componentDidMount = () => {\n    this.uuid = uuidv4();\n  }\n  componentWillUnmount = async () => {\n    let response = await fetch(`${Config.API_URL}/postgresql-restful/delete-all`, {\n      method: \"DELETE\", \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({userid: this.uuid})\n    })\n    console.log('delete all response = ', response)\n  }\n  create = async (e) => {\n      e.preventDefault();\n      let obj = {\n          userid: this.uuid,\n          character_name: Faker.name.findName(),\n          character_color: Utils.randomHex()\n      }\n\n      let response = await fetch(`${Config.API_URL}/postgresql-restful`, {\n          method: \"POST\", \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(obj)\n      })\n      let responseJson = await response.json();\n      console.log(responseJson)\n\n  }\n  read = async (e) => {\n    e.preventDefault();\n    let response = await fetch(`${Config.API_URL}/postgresql-restful/${this.uuid}`)\n    let responseJson = await response.json();\n    console.log(responseJson)\n  \n   this.setState({characters: responseJson.result, activeCharacter: responseJson.result[0]})\n  }\n  update = async (e) => {\n    e.preventDefault();\n    if (!this.state.activeCharacter) return;\n    let obj = {\n      id: this.state.activeCharacter.id,\n      character_color: Utils.randomHex(),\n      character_name: this.state.activeCharacter.character_name\n    }\n    let response = await fetch(`${Config.API_URL}/postgresql-restful`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    })\n    let responseJson = await response.json();\n  }\n  delete = async (e) => {\n    e.preventDefault();\n    if (!this.state.activeCharacter) return;\n    let obj = {\n      id: this.state.activeCharacter.id\n    }\n    let response = await fetch(`${Config.API_URL}/postgresql-restful`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    })\n    let responseJson = await response.json();\n    console.log(obj.id, responseJson)\n  }\n  \n  render() {\n    return (\n      <>\n      <CrudButtons create={this.create} read={this.read} update={this.update} delete={this.delete} />\n      <ul>\n        {\n          this.state.characters.map ( (item, index) => {\n            return (<li key={index}>\n              <ul>\n                <li>{item.id}</li>\n                <li>{item.character_color}</li>\n                <li>{item.character_name}</li>\n              </ul>\n            </li>)\n          })\n        }\n      </ul>\n      </>\n    );\n  }\n}\n","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CharacterModule.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":17},{"ruleId":"151","severity":1,"message":"156","line":4,"column":13,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"157","line":71,"column":13,"nodeType":"153","messageId":"154","endLine":71,"endColumn":19},{"ruleId":"151","severity":1,"message":"158","line":195,"column":13,"nodeType":"153","messageId":"154","endLine":195,"endColumn":28},{"ruleId":"151","severity":1,"message":"159","line":38,"column":11,"nodeType":"153","messageId":"154","endLine":38,"endColumn":23},{"ruleId":"151","severity":1,"message":"159","line":65,"column":9,"nodeType":"153","messageId":"154","endLine":65,"endColumn":21},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Config' is defined but never used.","Identifier","unusedVar","'Mutations' is defined but never used.","'PIXI' is defined but never used.","'result' is assigned a value but never used.","'activeCharacter' is assigned a value but never used.","'responseJson' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]