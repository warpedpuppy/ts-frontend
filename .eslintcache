[{"/Users/edwardwalther/Sites/tryingsomething/frontend/src/index.js":"1","/Users/edwardwalther/Sites/tryingsomething/frontend/src/reportWebVitals.js":"2","/Users/edwardwalther/Sites/tryingsomething/frontend/src/App.js":"3","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/Home.js":"4","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/NotFound.js":"5","/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/Menu.js":"6","/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/TokenService.js":"7","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hsl/HSL.js":"8","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/CSS.js":"9","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/rgb/RGB.js":"10","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/Hexadecimal.js":"11","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexCreator.js":"12","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexPicker.js":"13","/Users/edwardwalther/Sites/tryingsomething/frontend/src/AppContext.js":"14","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/DBS.js":"15","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/Layout.js":"16","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/Color.js":"17","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/grid/Grid.js":"18","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/flex/Flex.js":"19","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/GraphQL.js":"20","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/DisplayChars.js":"21","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/js/JS.js":"22","/Users/edwardwalther/Sites/tryingsomething/frontend/src/config.js":"23","/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/Utils.js":"24","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/services/mutations.js":"25","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/Mongo.js":"26","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/services/mongo-services.js":"27","/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/SubMenu.js":"28","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/CRUD.js":"29","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/JoinPopulate.js":"30","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CrudButtons.js":"31","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/postresql/PostgresQL.js":"32"},{"size":546,"mtime":1611581296697,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1607089328663,"results":"35","hashOfConfig":"34"},{"size":1673,"mtime":1613063905933,"results":"36","hashOfConfig":"34"},{"size":404,"mtime":1612885264955,"results":"37","hashOfConfig":"34"},{"size":160,"mtime":1613063928501,"results":"38","hashOfConfig":"34"},{"size":1252,"mtime":1612812674024,"results":"39","hashOfConfig":"34"},{"size":200,"mtime":1611581184878,"results":"40","hashOfConfig":"34"},{"size":2995,"mtime":1612799740006,"results":"41","hashOfConfig":"34"},{"size":650,"mtime":1612884134537,"results":"42","hashOfConfig":"34"},{"size":2887,"mtime":1612801148819,"results":"43","hashOfConfig":"34"},{"size":3358,"mtime":1612799821332,"results":"44","hashOfConfig":"34"},{"size":1245,"mtime":1612453553008,"results":"45","hashOfConfig":"34"},{"size":1007,"mtime":1612450572943,"results":"46","hashOfConfig":"34"},{"size":140,"mtime":1612449516966,"results":"47","hashOfConfig":"34"},{"size":817,"mtime":1613501717109,"results":"48","hashOfConfig":"34"},{"size":993,"mtime":1612884646564,"results":"49","hashOfConfig":"34"},{"size":1146,"mtime":1612884492703,"results":"50","hashOfConfig":"34"},{"size":152,"mtime":1612884699638,"results":"51","hashOfConfig":"34"},{"size":152,"mtime":1612884704004,"results":"52","hashOfConfig":"34"},{"size":887,"mtime":1613063601445,"results":"53","hashOfConfig":"34"},{"size":8007,"mtime":1613655418628,"results":"54","hashOfConfig":"34"},{"size":867,"mtime":1613480542502,"results":"55","hashOfConfig":"34"},{"size":81,"mtime":1613570920492,"results":"56","hashOfConfig":"34"},{"size":534,"mtime":1613653372200,"results":"57","hashOfConfig":"34"},{"size":3121,"mtime":1613653868180,"results":"58","hashOfConfig":"34"},{"size":1545,"mtime":1613656298516,"results":"59","hashOfConfig":"34"},{"size":1375,"mtime":1613138420579,"results":"60","hashOfConfig":"34"},{"size":829,"mtime":1613501788421,"results":"61","hashOfConfig":"34"},{"size":1229,"mtime":1613656276644,"results":"62","hashOfConfig":"34"},{"size":1096,"mtime":1613568017843,"results":"63","hashOfConfig":"34"},{"size":504,"mtime":1613658277719,"results":"64","hashOfConfig":"34"},{"size":2265,"mtime":1613658639445,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1vrafp1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwardwalther/Sites/tryingsomething/frontend/src/index.js",[],["132","133"],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/reportWebVitals.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/App.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/Home.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/NotFound.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/Menu.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/TokenService.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hsl/HSL.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/CSS.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/rgb/RGB.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/Hexadecimal.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexCreator.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/hexadecimal/HexPicker.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/AppContext.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/DBS.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/Layout.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/color/Color.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/grid/Grid.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/css/layout/flex/Flex.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/GraphQL.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/DisplayChars.js",["134","135"],"import React from 'react';\nimport Mutations from './services/mutations';\nimport { Button, Form } from 'react-bootstrap';\nimport './DisplayChars.css';\nimport * as PIXI from 'pixi.js'\nimport Utils from '../../../services/Utils';\nimport { v4 as uuidv4 } from 'uuid';\nexport default class DisplayChars extends React.Component {\n    state = {activeCharacter: undefined, instructions: '', mode: undefined, getAll: []};\n    canvasWidth = 800;\n    canvasHeight = 200;\n    characters = [];\n    stage = undefined;\n    app = undefined;\n    count = 0;\n    componentDidMount = () => {\n      Mutations.setUserID(uuidv4());\n      Mutations.deleteAllCharacters();\n      this.app = new PIXI.Application({width: this.canvasWidth, height: this.canvasWidth, backgroundColor: 0xFFFFFF, backgroundAlpha: 0});\n      document.getElementById(\"pixi-space\").appendChild(this.app.view);\n      this.stage = this.app.stage;\n      this.app.ticker.add(this.moveCharacters);\n    }\n    componentWillUnmount = () => {\n      this.characters = null;\n      this.app.destroy();\n    }\n  \n    moveCharacters = () => {\n      if (this.state.activeCharacter) return;\n      this.characters.forEach( character => {\n        if (this.state.mode !== 'update') {\n             character.x += character.vx;\n        character.y += character.vy;\n        }\n     \n        character.rotation = Math.atan2(character.vy, character.vx)\n        character.points[0].y = Utils.cosWave(0, 10, 0.01)\n        character.points[2].y = Utils.cosWave(0, 15, 0.01)\n        character.points[4].y = Utils.cosWave(0, -3, 0.01)\n       \n  \n        if ((character.x > this.canvasWidth || character.x < 0) ||\n       (character.y > this.canvasHeight || character.y < 0) ){character.vy *= -1;character.vx *= -1;}\n      })\n    }\n    addCharacter = async () => {\n      try {\n        let character = await Mutations.addChar(); \n        let arr = [];\n        for (let key in character) {\n          arr.push(`<li>${key}} ${character[key]}</li>`)\n        }\n        this.setState({getAll: [character]})\n\n        let points = [];\n        for (let i = 0; i < 6; i++) {\n          points.push({ x: i * 60, y: 0 })\n        }\n        let texture = new PIXI.Texture.from('/bmps/transparentKoi.png')\n        let newItem = new PIXI.SimpleRope(texture, points)\n        newItem.points = points;\n        newItem.tint = `0x${character.color.substring(1)}`\n        newItem.name = character.name;\n        newItem.id = character.id;\n        newItem.buttonMode = true;\n        newItem.interactive = true;\n        newItem.on('click', e => this.chooseCharacter(e))\n        newItem.scale.set(0.5)\n        newItem.pivot.set(0.5)\n        let xVal =  Math.random() * this.canvasWidth;\n        let yVal = Math.random() * this.canvasHeight;\n        newItem.vx = 1;\n        newItem.vy = 1;\n        newItem.x = xVal;\n        newItem.y = yVal;\n        this.stage.addChild(newItem)\n        this.characters.push(newItem)\n      } catch(e) {\n        console.error(e)\n      } \n    }\n    chooseCharacter = (e) => {\n\n\n      if (this.state.activeCharacter) return;\n     \n\n      if (this.state.mode === 'delete') {\n        this.setState({activeCharacter: e.target})\n        //remote\n        this.deleteCharacter(this.state.activeCharacter.id);\n        //local\n        let char = this.characters.find( c => c === this.state.activeCharacter);\n        this.stage.removeChild(char);\n        this.characters.splice(this.characters.indexOf(char), 1)\n        this.setState({activeCharacter: undefined})\n        return;\n      }  else if (this.state.mode === 'update') {\n        this.setState({activeCharacter: e.target, instructions: ''})\n        let temp = this.state.activeCharacter;\n        temp.rotation = 0;\n        temp.scale.set(1);\n        temp.x = (this.canvasWidth / 2) - (temp.width / 2);\n        temp.y = this.canvasHeight / 2;\n      }\n    \n\n    }\n    deleteCharacter = async (id) => {\n      try {\n       let result = await Mutations.deleteChar(id); \n       this.setState({characters: result})\n      } catch(e) {\n        console.error(e)\n      } \n    }\n    getCharacters = async () => {\n      let result = await Mutations.getChars();\n      if (!result.data.characters.length) {\n        this.setState({instructions: \"db is empty!\"})\n      } else {\n        this.setState({getAll: result.data.characters})\n      }\n      \n    }\n  \n    changeColorHandler = (e) => {\n      e.preventDefault();\n      this.setState({instructions: ''})\n      let newColor =  Utils.randomHex();\n       //change remote\n       let obj = {\n        name: this.state.activeCharacter.name,\n        color: newColor,\n        id: this.state.activeCharacter.id\n      };\n      this.updateCharacter(obj);\n\n       //change local\n       let temp = this.state.activeCharacter;\n       temp.tint =  `0x${newColor.substring(1)}`;\n       temp.scale.set(0.5);\n       this.setState({activeCharacter: undefined})\n\n    }\n    updateCharacter = async (obj) => {\n      try {\n        let result = await Mutations.updateChar(obj.id, obj.name, obj.color);\n        this.setState({characters: result});\n        return result ? true : false;\n      } catch (e) {\n          console.error(e)\n      }\n    }\n    cancelEdit = (e) => {\n      if (e) e.preventDefault();\n      if (this.state.activeCharacter) {\n         this.state.activeCharacter.scale.set(0.5);\n          this.setState({activeCharacter: undefined, mode: ''})\n      }\n     \n    }\n    crudButtonsHandler = (e) => {\n      this.cancelEdit();\n      let text = e.target.innerHTML;\n      this.setState({instructions: '', mode: '', getAll: []})\n      if (text === 'Create') {\n         this.addCharacter()\n      } else if (text === 'Update') {\n        this.setState({mode: 'update'})\n        if (this.characters.length) {\n          this.setState({instructions: \"click on one to update its name or color\"})\n        } else {\n          this.setState({instructions: \"there are none to update! click create first!\"})\n        }\n      } else if (text === 'Delete') {\n        this.setState({mode: 'delete'})\n        if (this.characters.length) {\n          this.setState({instructions: \"click on one to delete it\"})\n        } else {\n          this.setState({instructions: \"there are none to delete! click create first!\"})\n        }\n        \n      } else if (text === \"Read\") {\n        this.getCharacters();\n      }\n    }\n\n\n   render () {\n    const { activeCharacter, instructions, mode } = this.state;\n    const name = activeCharacter ?  activeCharacter.name : '';\n    const style = {width: `${this.canvasWidth}px`, height:  `${this.canvasHeight}px`, border: this.state.mode === 'delete' ? '3px solid red' : '3px solid black'}\n    const formStyle = {display: activeCharacter && mode === 'update' ? 'inline-block' : 'none'}\n    const getAll = this.state.getAll.map((item, index) => {\n      let tempStyle={color: `item.color`}\n      return (\n        <li key={index}>\n          <ul>\n            <li>character: </li>\n            <li>name: {item.name}</li>\n            <li style={tempStyle}>color: {item.color}</li>\n            <li style={tempStyle}>created at: {item.createdAt}</li>\n            <li style={tempStyle}>updated at: {item.updatedAt}</li>\n          </ul>\n        </li>\n      )\n    })\n    return (\n        <>\n          <div className=\"button-group\">\n            <Button onClick={this.crudButtonsHandler}>Create</Button>\n            <Button variant=\"success\" onClick={this.crudButtonsHandler}>Read</Button>\n            <Button variant=\"warning\" onClick={this.crudButtonsHandler}>Update</Button>\n            <Button variant=\"danger\" onClick={this.crudButtonsHandler}>Delete</Button>\n          </div>\n          <div id=\"pixi-space\" style={style}></div>\n          <div className=\"instructions\">{ instructions }</div>\n          <ol className=\"show-all\">{getAll}</ol>\n          <div className=\"edit-form\" style={formStyle}>\n            <div className=\"close-button\" onClick={this.cancelEdit}>x</div>\n            <Button size=\"sm\" onClick={this.changeColorHandler}>choose random new color</Button>\n          </div>\n        </>\n        )\n    }\n}\n","/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/js/JS.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/config.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/services/Utils.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/graphql/services/mutations.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/Mongo.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/mongo/services/mongo-services.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/components/SubMenu.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/CRUD.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/JoinPopulate.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/components/CrudButtons.js",[],"/Users/edwardwalther/Sites/tryingsomething/frontend/src/pages/dbs/postresql/PostgresQL.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":18,"nodeType":"142","messageId":"143","endLine":3,"endColumn":22},{"ruleId":"140","severity":1,"message":"144","line":193,"column":11,"nodeType":"142","messageId":"143","endLine":193,"endColumn":15},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]